import type { Metadata } from "next";
// import { Open_Sans } from "next/font/google";
import "./globals.css";
// import { ClerkProvider } from "@clerk/nextjs";
import { ThemeProvider } from "@/components/providers/theme-providers";
import { ModalProvider } from "@/components/providers/modal-provider";
import { cn } from "@/lib/utils";
import { SocketProvider } from "@/components/providers/socket-provider";
import { QueryProvider } from "@/components/providers/query-provider";
import { Toaster } from "@/components/ui/toaster";
import { currentProfile } from "@/lib/current-profile";
import { NextIntlClientProvider, useMessages } from "next-intl";

import React from "react";

// const font = Open_Sans({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Support chat app",
  description: "Generated by create next app",
};

type Props = {
  children: React.ReactNode;
  params: {
    locale: "en" | "es-Mx";
  };
};

const RootLayout: React.FC<Props> = ({ children, params: { locale } }) => {
  const messages = useMessages();
  return (
    <html lang={locale} suppressHydrationWarning>
      <body className={cn("bg-slate-50 dark:bg-[#313338]")}>
        <NextIntlClientProvider messages={messages}>
          {/* <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          storageKey="discord-theme"
        > */}
          <SocketProvider>
            <ModalProvider />
            <QueryProvider>{children}</QueryProvider>
            <Toaster />
          </SocketProvider>
          {/* </ThemeProvider> */}
        </NextIntlClientProvider>
      </body>
    </html>
  );
};

export default RootLayout;
